常用测试库

* Enzyme是由Airbnb开源的一个React的JavaScript测试工具，使React组件的输出更加容易extrapolate 。Enzyme的API和jQuery操作DOM一样灵活易用，因为它使用的是cheerio库来解析虚拟DOM，而cheerio的目标则是做服务器端的jQuery。Enzyme兼容大多数断言库和测试框架，如chai、mocha、jasmine等。
enzyme支持三种方式的渲染：
shallow：浅渲染，是对官方的Shallow Renderer的封装。将组件渲染成虚拟DOM对象，只会渲染第一层，子组件将不会被渲染出来，因而效率非常高。不需要DOM环境， 并可以使用jQuery的方式访问组件的信息；
render：静态渲染，它将React组件渲染成静态的HTML字符串，然后使用Cheerio这个库解析这段字符串，并返回一个Cheerio的实例对象，可以用来分析组件的html结构。
mount：完全渲染，它将组件渲染加载成一个真实的DOM节点，用来测试DOM API的交互和组件的生命周期，用到了jsdom来模拟浏览器环境。



* 什么是Mocha?
Mocha是JavaScript界中最受欢迎的一款单元测试框架，支持在node和浏览器端运行。。

Mocha的优势
（1）灵活性
  Mocha比较灵活，和更多的一些库结合使用。

（2）资料较多
  Mocha是比较年老的测试框架，在JavaScript界中更加广泛地使用。因此Mocha的community比较大，可参考的文献较多，测试过程中遇到一些问题，可以上网查一查可以获取不少的帮助。



* 什么是Jest?
  Jest是由facebook发布的，最近比较火热的一个测试框架。

Jest的优势
（1）Jest容易安装配置
  Jest可以说是零配置的，它会自动识别一些测试文件。只要用npm安装jest之后运行jest，即可完成测试，非常容易。

（2）Jest提供snapshot功能
  snapshot功能能够确保UI不会意外被改变。Jest会把结果值保存在一个文件当中，每次进行测试的时候会把测试值与文件中的结果值进行比较，

如果两个结果值不同，那么开发者可以选择要么改变代码，要么替代结果文件。



* 所谓"断言"，就是判断源码的实际执行结果与预期结果是否一致，如果不一致就抛出一个错误。
  断言库有很多种，Mocha并不限制使用哪一种。上面代码引入的断言库是chai，并且指定使用它的expect断言风格。
